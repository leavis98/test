<!--Simple Ontology Visualization, Center for DH at AKS-->
<html>
<head>
	<title>Simple Ontology Visualization</title>
	<meta charset='UTF-8'/>
	<meta property='og:title' content='Simple Ontology Visualization'/>
	<meta property='og:image' content='http://dh.aks.ac.kr/Graph/vis/img/makeGraph.jpg'/>
	<meta name='description' content='vis.js Network API Script'/>
	<meta name='author' content='Center for Digital Humanities at AKS'/>
	<script type='text/javascript' src='http://dh.aks.ac.kr/Graph/vis/dist/vis.js'></script>
	<link href='http://dh.aks.ac.kr/Graph/vis/dist/vis.css' rel='stylesheet' type='text/css' />
	<link href='http://dh.aks.ac.kr/Graph/vis/dist/vis-network.min.css' rel='stylesheet' type='text/css'/>
	<style type='text/css'>
		#mynetwork {
			border: 1px solid lightgray;
			width:100%;
			height: 90%;
		}
	</style>

	<script type='text/javascript'>
	
	var nodesArray = [], edgesArray = [];
	var network = null;

	function destroy() {
		if (network !== null) {
			network.destroy();
			network = null;
			nodesArray = [];
			edgesArray = [];		
		} 
	}	

	function draw() {

		destroy();

		nodesArray.push({
			id: '001',
			label: '병산서원',
			title: '병산서원',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '002',
			label: '입교당',
			title: '입교당',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '003',
			label: '만대루',
			title: '만대루',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '004',
			label: '류성룡',
			title: '류성룡',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '005',
			label: '선조',
			title: '선조',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '006',
			label: '이황',
			title: '이황',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '007',
			label: '이계로',
			title: '이계로',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '008',
			label: '철종',
			title: '철종',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		nodesArray.push({
			id: '009',
			label: '안동',
			title: '안동',
			shape: 'ellipse',
			color: {background: 'white',
				border: 'navy'
				},
			url: ''
		});

		edgesArray.push({
			from: '002',
			to: '001',
			label: '속하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '003',
			to: '001',
			label: '속하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '004',
			to: '001',
			label: '창건하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '007',
			to: '001',
			label: '사액_요청하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '008',
			to: '001',
			label: '사액하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '004',
			to: '005',
			label: '신하이다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '004',
			to: '006',
			label: '제자이다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '001',
			to: '009',
			label: '위치하다',
			title: '',
			arrows: 'to',
		});

		edgesArray.push({
			from: '001',
			to: '004',
			label: '배향하다',
			title: '',
			arrows: 'to',
		});

		var nodes = new vis.DataSet(nodesArray);
		var edges = new vis.DataSet(edgesArray);
		
		// create a network
		var container = document.getElementById('mynetwork');
		var data = { nodes: nodes, edges: edges };
		
		var options = {
			nodes: { size: 30, margin: 5,
				color: { background: 'white',
					highlight: { border: 'gold', background: '#D2E5FF' },
					hover: { border: 'gold', background: '#D2E5FF' },
				},
				font: { face: '함초롬바탕', color: 'black', size: 15 },
				labelHighlightBold: true,
				shadow: false
			},

			edges: { length: 300, width: 1,
				color: { color: 'lightgray', highlight: 'grey', opacity: 1.0 },
				font: { face: '맑은 고딕', align: 'bottom', size: 12, color: 'darkcyan', strokeWidth: 5, strokeColor: 'white' },
				smooth: { enabled: true, type: 'dynamic', roundness: 0.5 }
			},
			layout: { randomSeed: 100,
				hierarchical: { 
					enabled: 
						directionInput.value == 'UD' || directionInput.value == 'LR'
							? true
							: false,
					direction: directionInput.value,
					sortMethod: 'directed'
				}
			},

			interaction: { navigationButtons: true },
			physics: { stabilization: false }
		};
		
		// initialize your network!
		network = new vis.Network(container, data, options);
		
		// select a node to open a related web page.
    	network.on('selectNode', function(params) {
			var sel = params.nodes[0];
			var rows = nodesArray.length;
			for (var i = 0; i < rows; i++) {
				if (sel==nodesArray[i].id) {
					var destination=nodesArray[i].url;
					if( !nodesArray[i].url || nodesArray[i].url=='')break;
					else window.open(encodeURI(decodeURI(nodesArray[i].url)), '_self');
				}
			}
		});
	}
    </script>
</head>

<body onload='draw();'>

	<div id='mynetwork'></div>

	<div  id='layout-selection' style='text-align:right;font-size:150%;'>
		<input type='button' id='btn-Normal' value='⿴' />
		<input type='button' id='btn-Vertical' value='⿳' />
		<input type='button' id='btn-Horizontal' value='⿲' />
		<input type='hidden' id='direction' value='Normal' />
	</div>

	<script language='JavaScript'>	
		var directionInput = document.getElementById('direction');

		var btnUD = document.getElementById('btn-Vertical');
		btnUD.onclick = function () {
			directionInput.value = 'UD';
			draw();
		};
		var btnLR = document.getElementById('btn-Horizontal');
		btnLR.onclick = function () {
			directionInput.value = 'LR';
			draw();
		};
		var btnNormal = document.getElementById('btn-Normal');
		btnNormal.onclick = function () {
			directionInput.value = 'Normal';
			draw();
		};
	</script>
</body>
</html>
